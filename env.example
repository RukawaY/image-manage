# ===========================================
# 图片管理系统 - 环境变量配置示例
# ===========================================
# 
# 使用说明：
# 1. 复制此文件为 .env 文件
# 2. 根据你的实际情况修改配置值
# 3. 不要将 .env 文件提交到版本控制系统

# ===========================================
# Django 后端配置
# ===========================================

# Django Secret Key（生产环境务必更改！）
# 生成新密钥: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=django-insecure-wm*wjc32otzbfv_4wjzags$)6yn8q6x0mx3*m6)59a#43iofa4

# 调试模式（生产环境设置为 False）
DEBUG=True

# 允许的主机列表（用逗号分隔，生产环境必须设置具体域名或IP）
# 示例: ALLOWED_HOSTS=example.com,www.example.com,192.168.1.100
ALLOWED_HOSTS=*

# ===========================================
# CORS 跨域配置
# ===========================================

# 允许的跨域源（用逗号分隔，包含协议和端口）
# 本地开发示例:
# CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000,http://localhost
# 
# 生产环境示例（替换为你的实际域名和IP）:
# CORS_ALLOWED_ORIGINS=http://your-domain.com,https://your-domain.com,http://your-ip:80
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000,http://localhost,http://127.0.0.1:5173,http://127.0.0.1:3000,http://127.0.0.1

# ===========================================
# CSRF 配置
# ===========================================

# CSRF 信任的源（用逗号分隔）
# 本地开发示例:
# CSRF_TRUSTED_ORIGINS=http://localhost:5173,http://localhost:3000,http://localhost
# 
# 生产环境示例（替换为你的实际域名和IP）:
# CSRF_TRUSTED_ORIGINS=http://your-domain.com,https://your-domain.com,http://your-ip
CSRF_TRUSTED_ORIGINS=http://localhost:5173,http://localhost:3000,http://localhost,http://127.0.0.1:5173,http://127.0.0.1:3000,http://127.0.0.1

# ===========================================
# 数据库配置
# ===========================================

# 数据库主机（Docker环境使用服务名 'db'，本地开发使用 'localhost'）
DB_HOST=db

# 数据库名称
DB_NAME=imagedb

# 数据库用户名
DB_USER=user

# 数据库密码（生产环境务必更改！）
DB_PASS=password

# MySQL Root 密码（生产环境务必更改！）
MYSQL_ROOT_PASSWORD=rootpassword

# ===========================================
# Google Gemini AI 配置
# ===========================================

# Gemini API Key（用于 AI 图片分析功能）
# 获取地址: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here

# ===========================================
# 前端配置（用于构建前端）
# ===========================================

# 后端 API 地址
# 本地开发: http://localhost:8000/api
# 生产环境: http://your-domain.com:8000/api 或 http://your-ip:8000/api
VITE_API_URL=http://localhost:8000/api

# ===========================================
# 代理配置
# ===========================================

# 代理地址
http_proxy=http://localhost:7890
https_proxy=http://localhost:7890

# ===========================================